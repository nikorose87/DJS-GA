<?xml version="1.0" ?><OpenSimDocument Version="20302">
  <ScaleTool name="S01_scaled">
	<!--Mass of the subject in kg.  Subject-specific model generated by
	    scaling step will have this total mass.-->
		<mass>68.9</mass>
	<!--Height of the subject in mm.  For informational purposes only (not
	    used by scaling).-->
		<height>1.75</height>
	<!--Age of the subject in years.  For informational purposes only (not
	    used by scaling).-->
		<age>29</age>
	<!--Notes for the subject.-->
	<notes> This is an example setup file for scale.exe. </notes>
	<!--Specifies the name of the unscaled model (.osim) and the marker set.-->
	<GenericModelMaker name="">
		<!--Model file (.osim) for the unscaled model.-->
		<model_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/osim_files_S01/custom_model.osim</model_file>
		<!--Set of model markers used to scale the model. Scaling is done based on
		    distances between model markers compared to the same distances between
		    the corresponding experimental markers.-->
		<marker_set_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/osim_files_S01/Scale_MarkerSet.xml</marker_set_file>
	</GenericModelMaker>
	<!--Specifies parameters for scaling the model.-->
	<ModelScaler name="">
			<!--Whether or not to use the model scaler during scale-->
			<apply> true </apply>
		<!--Specifies the scaling method and order. Valid options are
		    'measurements', 'manualScale', singly or both in any sequence.-->
		<scaling_order> measurements manualScale </scaling_order>
		<!--TRC file (.trc) containing the marker positions used for
		    measurement-based scaling. This is usually a static trial, but doesn't
		    need to be.  The marker-pair distances are computed for each time step
		    in the TRC file and averaged across the time range.-->
		<marker_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/S01_0001_Static/S01_0001_Static_markers.trc</marker_file>
		<!--Time range over which to average marker-pair distances in the marker
		    file (.trc) for measurement-based scaling.-->
			<time_range>0 0.408</time_range>
		<!--Flag (true or false) indicating whether or not to preserve relative
		    mass between segments.-->
		<preserve_mass_distribution> true </preserve_mass_distribution>
		<!--Name of OpenSim model file (.osim) to write when done scaling.-->
		<output_model_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/osim_files_S01/S01_model.osim</output_model_file>
	</ModelScaler>
	<!--Specifies parameters for placing markers on the model once a model is
	    scaled.-->
	<MarkerPlacer name="">
			<!--Whether or not to use the marker placer during scale-->
			<apply> true </apply>
			<!--Task set used to specify weights used in the IK computation of the
			    static pose.-->
			<IKTaskSet name="gait2354_Scale">
				<objects>
					<IKMarkerTask name="C7">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ACROMION">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ACROMION">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_HUM_PROX">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_HUM_ANT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.0 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ELBOW_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ELBOW_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_WIRST_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_WRITS_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_HUM_PROX">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_HUM_ANT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ELBOW_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ELBOW_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_WRIST_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_WIRST_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ILIAC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ILIAC">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_THIGH_2">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_THIGH_3">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_KNEE_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_KNEE_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_SHANK_2">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_SHANK_3">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ANKLE_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_ANKLE_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_HEEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_FOOT_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="R_FOOT_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_THIGH_1">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_THIGH_4">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_KNEE_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_KNEE_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_SHANK_1">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_SHANK_4">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ANKLE_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_ANKLE_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_HEEL">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_FOOT_MED">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>       1.00000000 </weight>
					</IKMarkerTask>
					<IKMarkerTask name="L_FOOT_LAT">
						<!--Whether or not this task will be used during inverse kinematics solve.-->
						<apply> true </apply>
						<!--Weight given to a marker or coordinate for solving inverse kinematics
						    problems.-->
						<weight>    1.00000000 </weight>
					</IKMarkerTask>
				</objects>
				<groups/>
			</IKTaskSet>
		<!--TRC file (.trc) containing the time history of experimental marker
		    positions (usually a static trial).-->
		<marker_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/S01_0001_Static/S01_0001_Static_markers.trc</marker_file>
		<!--Name of file containing the joint angles used to set the initial
		    configuration of the model for the purpose of placing the markers.
		    These coordinate values can also be included in the optimization
		    problem used to place the markers. Before the model markers are
		    placed, a single frame of an inverse kinematics (IK) problem is
		    solved. The IK problem can be solved simply by matching marker
		    positions, but if the model markers are not in the correct locations,
		    the IK solution will not be very good and neither will marker
		    placement. Alternatively, coordinate values (specified in this file)
		    can be specified and used to influence the IK solution. This is
		    valuable particularly if you have high confidence in the coordinate
		    values. For example, you know for the static trial the subject was
		    standing will all joint angles close to zero. If the coordinate set
		    (see the CoordinateSet property) contains non-zero weights for
		    coordinates, the IK solution will try to match not only the marker
		    positions, but also the coordinates in this file. Least-squared error
		    is used to solve the IK problem.-->
		<coordinate_file> </coordinate_file>
		<!--Time range over which the marker positions are averaged.-->
			<time_range>0 0.408</time_range>
		<!--Name of the motion file (.mot) written after marker relocation
		    (optional).-->
		<output_motion_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/osim_files_S01/S01_static_output.mot</output_motion_file>
			<!--Output OpenSim model file (.osim) after scaling and maker placement.-->
			<output_model_file>/home/nikorose/Documents/DJS-GA/C3D/Gait_rawdata_c3d/osim_files_S01/S01_model.osim</output_model_file>
			<!--Output marker set containing the new marker locations after markers
			    have been placed.-->
			<output_marker_file> Unassigned </output_marker_file>
			<!--Maximum amount of movement allowed in marker data when averaging
			    frames of the static trial. A negative value means there is not limit.-->
			<max_marker_movement>      -1.00000000 </max_marker_movement>
	</MarkerPlacer>
	</ScaleTool>
</OpenSimDocument>